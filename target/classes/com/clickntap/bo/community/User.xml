<bean cache="community_user">
    <validation>
      <group name="create,update"><![CDATA[
        ${this.assertNotEmpty("name")}
        ${this.assertNotEmpty("surname")}
        ${this.assertNotEmpty("email")}
        ${this.assertNotEmpty("password")}
        ${this.assertEmail("email")}
        ${this.assertUnique("email")}
        ${this.assertUnique("username")}
      ]]></group>
      <group name="create"><![CDATA[
        ${this.assertNotEmpty("confirmPassword")}
        ${this.assertEquals("confirmPassword","password")}
        ${this.assertLength("password",4,16)}
      ]]></group>
      <group name="execute-password"><![CDATA[
  			${this.assertExists("oldPassword")}
  			${this.assertNotEmpty("oldPassword")}
  			${this.assertNotEmpty("newPassword")}
  			${this.assertEquals("confirmNewPassword","newPassword")}
  			${this.assertLength("newPassword",4,16)}
  		]]></group>
    </validation>
    <read name="id"><![CDATA[
        select
          id as "id",
          name as "name",
          photo as "photo",
          surname as "surname",
          email as "email",
          description as "description",
          username as "username",
          password as "password",
          gender as "gender",
          email_checked as "emailChecked",
          birth_date as "birthDate",
          creation_date as "creationDate",
          last_modified as "lastModified",
          shop_id as "shopId",
          favorite_shop_id as "favoriteShopId",
          card_code as "cardCode"
        from
          io_user
        where
          id = ${this.id}
    ]]></read>
    <read-list name="bookandgets"><![CDATA[
      select id as "id" from io_bookandget where user_id = ${this.id}
    ]]></read-list>
    <read-list name="appinsts"><![CDATA[
      select id as "id" from io_appinst where user_id = ${this.id}
    ]]></read-list>
    <read-list name="userfollowers"><![CDATA[
      select id as "id" from io_userfollower where user_id = ${this.id}
    ]]></read-list>
    <read-list name="userfollowing"><![CDATA[
      select id as "id" from io_userfollower where follower_id = ${this.id}
    ]]></read-list>
    <read-list name="userlibraries"><![CDATA[
      select id as "id" from io_userlibrary where user_id = ${this.id}
    ]]></read-list>
    <read-list name="userratings"><![CDATA[
      select id as "id" from io_userrating where user_id = ${this.id}
    ]]></read-list>
    <read-list name="userposts"><![CDATA[
      select id as "id" from io_userpost where user_id = ${this.id}
    ]]></read-list>
    <read-list name="postreactions"><![CDATA[
      select id as "id" from io_postreaction where user_id = ${this.id}
    ]]></read-list>
    <read-list name="postcomments"><![CDATA[
      select id as "id" from io_postcomment where user_id = ${this.id}
    ]]></read-list>
    <read-list name="postcommentreactions"><![CDATA[
      select id as "id" from io_postcommentreaction where user_id = ${this.id}
    ]]></read-list>
    <read-list name="comments"><![CDATA[
      select id as "id" from io_comment where user_id = ${this.id}
    ]]></read-list>
    <read-list name="commentreactions"><![CDATA[
      select id as "id" from io_commentreaction where user_id = ${this.id}
    ]]></read-list>
    <read-list name="useractions"><![CDATA[
      select id as "id" from io_useraction where user_id = ${this.id}
    ]]></read-list>
    <read-list name="followersactions"><![CDATA[
      select id as "id" from io_useraction where action_user_id = ${this.id}
    ]]></read-list>
    <read-list name="userreactions"><![CDATA[
      select id as "id" from io_userreaction where user_id = ${this.id}
    ]]></read-list>
    <read-list name="email"><![CDATA[
    		select id as "id" from io_user where email = ${this.email} and (id != ${this.id} or ${this.id} is null)
    ]]></read-list>
    <read name="auth"><![CDATA[
    		select id as "id" from io_user where (lower(username) = lower(${this.email}) or lower(email) = lower(${this.email})) and password = ${this.passwordMD5} limit 1
    ]]></read>
    <read-list name="oldPassword"><![CDATA[
    		select id as "id" from io_user where password = ${this.oldPasswordMD5} and id = ${this.id}
    ]]></read-list>
    <read-list name="username"><![CDATA[
    		select id as "id" from io_user where username = ${this.username} and (id != ${this.id} or ${this.id} is null)
    ]]></read-list>
    <execute name="password"><![CDATA[
      update io_user set password = ${this.newPasswordMD5}, last_modified = ${this.now()} where id = ${this.id}
    ]]></execute>
    <execute name="forgot-password"><![CDATA[
      update io_user set password = ${this.newPasswordMD5}, last_modified = ${this.now()} where id = ${this.id}
    ]]></execute>

    <read name="name"><![CDATA[
      select
        id as "id"
      from
        io_user
      where
        lower(name) = lower(${this.name})
    ]]></read><read name="surname"><![CDATA[
      select
        id as "id"
      from
        io_user
      where
        lower(surname) = lower(${this.surname})
    ]]></read><read name="email"><![CDATA[
      select
        id as "id"
      from
        io_user
      where
        lower(email) = lower(${this.email})
    ]]></read><read name="description"><![CDATA[
      select
        id as "id"
      from
        io_user
      where
        lower(description) = lower(${this.description})
    ]]></read><read name="username"><![CDATA[
      select
        id as "id"
      from
        io_user
      where
        lower(username) = lower(${this.username})
    ]]></read><read name="password"><![CDATA[
      select
        id as "id"
      from
        io_user
      where
        lower(password) = lower(${this.password})
    ]]></read>
    <update><![CDATA[
        update io_user
        set
          name = ${this.name},
          photo = ${this.photo},
          surname = ${this.surname},
          email = ${this.email},
          description = ${this.description},
          username = ${this.username},
          password = ${this.password},
          gender = ${this.gender},
          email_checked = ${this.emailChecked},
          birth_date = ${this.birthDate},
          last_modified = ${this.now()},
          shop_id = ${this.shopId},
          favorite_shop_id = ${this.favoriteShopId},
          card_code = ${this.cardCode}
        where
          id = ${this.id}
    ]]></update>
    <execute name="touch"><![CDATA[
        update io_user
        set
          last_modified = ${this.now()},
        where
          id = ${this.id}
    ]]></execute>
    <create><![CDATA[
        insert into io_user (
          [#if this.bean.id??]id,[/#if]
          name,
          photo,
          surname,
          email,
          description,
          username,
          password,
          gender,
          email_checked,
          birth_date,
          creation_date,
          last_modified,
          shop_id,
          favorite_shop_id,
          card_code
        ) values (
          [#if this.bean.id??]${this.id},[/#if]
          ${this.name},
          ${this.photo},
          ${this.surname},
          ${this.email},
          ${this.description},
          ${this.username},
          ${this.passwordMD5},
          ${this.gender},
          ${this.emailChecked},
          ${this.birthDate},
          [#if this.bean.creationDate??]${this.creationDate}[#else]${this.now()}[/#if],
          [#if this.bean.lastModified??]${this.lastModified}[#else]${this.now()}[/#if],
          ${this.shopId},
          ${this.favoriteShopId},
          ${this.cardCode}
        )
    ]]></create>
    <delete><![CDATA[
      delete from
        io_user
      where
        id = ${this.id}
    ]]></delete>
    <curr-val><![CDATA[
        select LAST_INSERT_ID() as id
    ]]></curr-val>
</bean>
